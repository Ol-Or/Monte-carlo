import torch
import cv2
from PIL import Image
import numpy as np
import time

# YOLOv5 모델 로드
model = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=True)  # 사전 학습된 YOLOv5s 모델
model.eval()

# 클래스 레이블
classes = model.names

# 비디오 스트리밍 설정
cap = cv2.VideoCapture(0)  # 0은 기본 카메라
if not cap.isOpened():
    print("Error: Could not open video stream.")
    exit()

print("Starting video stream...")

# 이전 감지 시간 초기화
prev_time = time.time()
detection_interval = 5  # 감지 간격 (초)

try:
    while True:
        ret, frame = cap.read()
        if not ret:
            print("Failed to grab frame.")
            break

        current_time = time.time()

        # 5초마다 객체 탐지
        if current_time - prev_time >= detection_interval:
            # OpenCV 이미지를 PIL 이미지로 변환
            img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
            
            # 모델에 이미지 입력
            results = model(img)
            
            # 결과 처리
            person_count = 0
            for detection in results.xyxy[0]:  # xyxy 형식의 바운딩 박스
                xmin, ymin, xmax, ymax, conf, cls = detection
                if conf > 0.5 and int(cls) == 0:  # '0'은 사람 클래스
                    person_count += 1
                    startX, startY, endX, endY = int(xmin), int(ymin), int(xmax), int(ymax)
                    cv2.rectangle(frame, (startX, startY), (endX, endY), (0, 255, 0), 2)
                    label = f"{classes[int(cls)]}: {conf:.2f}"
                    cv2.putText(frame, label, (startX, startY - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
            
            print(f"Number of People: {person_count}")

            prev_time = current_time
        
        # 비디오 스트림을 화면에 표시
        cv2.imshow("Video Stream", frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

except KeyboardInterrupt:
    print("Program terminated.")
finally:
    cap.release()
    cv2.destroyAllWindows()
    print("Video stream stopped.")







sudo apt-get install -y build-essential cmake git pkg-config libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev gfortran openexr libatlas-base-dev python3-dev python3-numpy libtbb2 libtbb-dev libdc1394-22-dev


mkdir -p ~/opencv_build && cd ~/opencv_build
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git



cd ~/opencv_build/opencv
mkdir build && cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
      -D ENABLE_NEON=ON \
      -D ENABLE_VFPV3=ON \
      -D BUILD_TESTS=OFF \
      -D INSTALL_PYTHON_EXAMPLES=OFF \
      -D BUILD_EXAMPLES=OFF ..
make -j4  # 컴파일하는 데 시간이 걸릴 수 있습니다.
sudo make install
sudo ldconfig






Traceback (most recent call last):
  File "/home/monte-carlo1/lcd_detect_people.py", line 67, in <module>
    cv2.destroyAllWindows()
cv2.error: OpenCV(4.9.0) /io/opencv/modules/highgui/src/window.cpp:1266: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvDestroyAllWindows'
